{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport reducer from '../reducers/counter';\nconst logger = createLogger({\n  collapsed: (getState, action, logEntry) => !logEntry.error\n});\nconst middleware = applyMiddleware(logger); // const initialState = {\n//     count: 10\n// }\n// export const reducer = (state = initialState, action) => {\n//     switch (action.type) {\n//         case 'INCREMENT':\n//             return { ...state, count: action.payload + 1 };\n//         default:\n//             return state;\n//     }\n// };\n\nexport const makeStore = (initialState, options) => {\n  return createStore(reducer, initialState, middleware);\n};","map":{"version":3,"sources":["/Users/rahulbhate/projects/react-redux-next/redux/store/store.js"],"names":["createStore","applyMiddleware","createLogger","reducer","logger","collapsed","getState","action","logEntry","error","middleware","makeStore","initialState","options"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,MAAMC,MAAM,GAAIF,YAAY,CAAC;AACzBG,EAAAA,SAAS,EAAE,CAACC,QAAD,EAAWC,MAAX,EAAmBC,QAAnB,KAAgC,CAACA,QAAQ,CAACC;AAD5B,CAAD,CAA5B;AAIA,MAAMC,UAAU,GAAGT,eAAe,CAACG,MAAD,CAAlC,C,CACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMO,SAAS,GAAG,CAACC,YAAD,EAAeC,OAAf,KAA2B;AAChD,SAAOb,WAAW,CAACG,OAAD,EAAUS,YAAV,EAAwBF,UAAxB,CAAlB;AACH,CAFM","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport reducer from '../reducers/counter';\nconst logger  = createLogger({\n    collapsed: (getState, action, logEntry) => !logEntry.error\n});\n\nconst middleware = applyMiddleware(logger);\n// const initialState = {\n//     count: 10\n// }\n\n// export const reducer = (state = initialState, action) => {\n//     switch (action.type) {\n//         case 'INCREMENT':\n//             return { ...state, count: action.payload + 1 };\n//         default:\n//             return state;\n//     }\n// };\n\nexport const makeStore = (initialState, options) => {\n    return createStore(reducer, initialState, middleware);\n};\n"]},"metadata":{},"sourceType":"module"}