{"ast":null,"code":"var __jsx = React.createElement;\n// _app.js\nimport React from 'react';\nimport { makeStore } from '../redux/store/store';\nimport { Provider } from 'react-redux';\nimport App from 'next/app';\nimport withRedux from 'next-redux-wrapper';\n\nconst MyApp = ({\n  Component,\n  pageProps,\n  store\n}) => {\n  return __jsx(Provider, {\n    store: store\n  }, __jsx(Component, pageProps));\n};\n\nMyApp.getInitialProps = async ({\n  Component,\n  ctx\n}) => {\n  // we can dispatch from here too\n  ctx.store.dispatch({\n    type: 'INCREMENT',\n    payload: 2\n  });\n  const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n  return {\n    pageProps\n  };\n};\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["/Users/rahulbhate/projects/react-redux-next/pages/_app.js"],"names":["React","makeStore","Provider","App","withRedux","MyApp","Component","pageProps","store","getInitialProps","ctx","dispatch","type","payload"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,CAAD,KAAqC;AAC/C,SAEQ,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEA;AAAjB,KACI,MAAC,SAAD,EAAeD,SAAf,CADJ,CAFR;AAMH,CAPD;;AASAF,KAAK,CAACI,eAAN,GAAwB,OAAO;AAAEH,EAAAA,SAAF;AAAaI,EAAAA;AAAb,CAAP,KAA8B;AAClD;AACAA,EAAAA,GAAG,CAACF,KAAJ,CAAUG,QAAV,CAAmB;AAAEC,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA,OAAO,EAAE;AAA9B,GAAnB;AACA,QAAMN,SAAS,GAAGD,SAAS,CAACG,eAAV,GAA4B,MAAMH,SAAS,CAACG,eAAV,CAA0BC,GAA1B,CAAlC,GAAmE,EAArF;AACA,SAAO;AAAEH,IAAAA;AAAF,GAAP;AACH,CALD;;AAOA,eAAeH,SAAS,CAACH,SAAD,CAAT,CAAqBI,KAArB,CAAf","sourcesContent":["// _app.js\nimport React from 'react';\nimport { makeStore } from '../redux/store/store';\nimport { Provider } from 'react-redux';\nimport App from 'next/app';\nimport withRedux from 'next-redux-wrapper';\n\n\nconst MyApp = ({ Component, pageProps, store }) => {\n    return (\n        \n            <Provider store={store}>\n                <Component {...pageProps} />\n            </Provider>\n    );\n};\n\nMyApp.getInitialProps = async ({ Component, ctx }) => {\n    // we can dispatch from here too\n    ctx.store.dispatch({ type: 'INCREMENT', payload: 2 });\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n    return { pageProps };\n};\n\nexport default withRedux(makeStore)(MyApp);"]},"metadata":{},"sourceType":"module"}