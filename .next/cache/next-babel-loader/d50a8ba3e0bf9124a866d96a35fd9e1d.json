{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nvar logger = createLogger({\n  collapsed: function collapsed(getState, action, logEntry) {\n    return !logEntry.error;\n  }\n});\nvar middleware = applyMiddleware(logger);\nvar initialState = {\n  count: 0\n};\nexport var reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FOO':\n      return _objectSpread({}, state, {\n        foo: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\nexport var makeStore = function makeStore(initialState, options) {\n  return createStore(reducer, initialState, middleware);\n};","map":{"version":3,"sources":["/Users/rahulbhate/projects/react-redux-next/redux/store/store.js"],"names":["createStore","applyMiddleware","createLogger","logger","collapsed","getState","action","logEntry","error","middleware","initialState","count","reducer","state","type","foo","payload","makeStore","options"],"mappings":";;;;;;;;;;;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,IAAMC,MAAM,GAAID,YAAY,CAAC;AACzBE,EAAAA,SAAS,EAAE,mBAACC,QAAD,EAAWC,MAAX,EAAmBC,QAAnB;AAAA,WAAgC,CAACA,QAAQ,CAACC,KAA1C;AAAA;AADc,CAAD,CAA5B;AAIA,IAAMC,UAAU,GAAGR,eAAe,CAACE,MAAD,CAAlC;AACA,IAAMO,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;AAIA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXJ,MAAW;;AACrD,UAAQA,MAAM,CAACQ,IAAf;AACI,SAAK,KAAL;AACI,+BAAYD,KAAZ;AAAmBE,QAAAA,GAAG,EAAET,MAAM,CAACU;AAA/B;;AACJ;AACI,aAAOH,KAAP;AAJR;AAMH,CAPM;AASP,OAAO,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAACP,YAAD,EAAeQ,OAAf,EAA2B;AAChD,SAAOlB,WAAW,CAACY,OAAD,EAAUF,YAAV,EAAwBD,UAAxB,CAAlB;AACH,CAFM","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nconst logger  = createLogger({\n    collapsed: (getState, action, logEntry) => !logEntry.error\n});\n\nconst middleware = applyMiddleware(logger);\nconst initialState = {\n    count: 0\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'FOO':\n            return { ...state, foo: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const makeStore = (initialState, options) => {\n    return createStore(reducer, initialState, middleware);\n};\n"]},"metadata":{},"sourceType":"module"}